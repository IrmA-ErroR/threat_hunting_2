---
title: "Информационно-аналитические технологии поиска угроз информационной безопасности"
author: "Kabanova Svetlana"
format: 
    md:
        output-file: README.md
---

# Лабораторная работа №4

Исследование метаданных DNS трафика

## Цель работы

1. Зекрепить практические навыки использования языка программирования R для
обработки данных
2. Закрепить знания основных функций обработки данных экосистемы tidyverse
языка R
3. Закрепить навыки исследования метаданных DNS трафика

## Ход работы
Для выполнения предложенного задания Вам необходимо последовательно
проделать следующие шаги:

#### Подготовка данных

```{r load-packages, include=FALSE}
library(dplyr)
library(magrittr)
library(knitr)
```

1\. Импортируйте данные DNS.

```{r}
dns_log <- read.csv("dns.log", header = FALSE, sep = "\t", encoding = "UTF-8")
```

```{r}
head(dns_log, 10)
```
```{r}
header <- read.csv("header.csv")
```

```{r}
header
```
2\. Добавьте пропущенные данные о структуре данных (назначении столбцов)


```{r}
colnames(dns_log) <- read.csv("header.csv", header = FALSE, skip = 1)$V1
```
```{r}
header[3, "Field"] <- "id.orig_h"
header[3, "Type"] <- "addr"
header[4, "Field"] <- "id.resp_h"
header[4, "Type"] <- "addr"
header[4, "Description"] <- "Response IP"
```

```{r}
header_full <- header %>% add_row(Field = 'id.orig_p', Type = 'port', Description = 'Origin port', .before = 4)
```


```{r}
header_full <- header_full %>% add_row(Field = 'id.resp_p', Type = 'port', Description = 'Response port', .before = 6)
```
```{r}
header_full
```
3\. Преобразуйте данные в столбцах в нужный формат
```{r}
field_n<-header_full[,1]
colnames(dns_log)<-field_n
dns_log$ts <- as.POSIXct(dns_log$ts, origin="1970-01-01")
```
4\. Просмотрите общую структуру данных с помощью функции glimpse()
```{r}
glimpse(dns_log)
```
```{r}
glimpse(header)
```

#### Анализ
4\. Сколько участников информационного обмена в сети Доброй Организации? 
```{r}
unique_ips <- union(unique(dns_log$id.orig_h), unique(dns_log$id.resp_h))
unique_ips %>% length()
```
5\. Какое соотношение участников обмена внутри сети и участников обращений к внешним ресурсам?
```{r}
internal_ip_pattern <- c("192.168.", "10.", "100.([6-9]|1[0-1][0-9]|12[0-7]).", "172.((1[6-9])|(2[0-9])|(3[0-1])).")
internal_ips <- unique_ips[grep(paste(internal_ip_pattern, collapse = "|"), unique_ips)]
count_internal <- sum(unique_ips %in% internal_ips)
count_external <- length(unique_ips) - count_internal

ratio <- count_internal / count_external
ratio
```

6\. Найдите топ-10 участников сети, проявляющих наибольшую сетевую активность.
```{r}
top_10_activity <- dns_log %>%
  group_by(ip = id.orig_h) %>%
  summarise(activity_count = n()) %>%
  arrange(desc(activity_count)) %>%
  head(10)

top_10_activity
```
7\. Найдите топ-10 доменов, к которым обращаются пользователи сети и соответственное количество обращений

```{r}
top_domains <- dns_log %>%
  group_by(domain = tolower(`query `)) %>%
  summarise(requests = n()) %>%
  arrange(desc(requests)) %>%
  top_n(10, requests)

print(top_domains)
```

8\. Опеределите базовые статистические характеристики (функция summary()) интервала времени между
последовательным обращениями к топ-10 доменам.

```{r}
top_10_domains_filtered <- dns_log %>% 
  filter(tolower(`query `) %in% top_domains$domain) %>%
  arrange(ts)
time_intervals <- diff(top_10_domains_filtered$ts)

summary(time_intervals)
```

9\. Часто вредоносное программное обеспечение использует DNS канал в качестве канала управления, периодически отправляя запросы на подконтрольный злоумышленникам DNS сервер. По периодическим запросам на один и тот же домен можно выявить скрытый DNS канал. Есть ли такие IP адреса в исследуемом датасете?

```{r}
ip_domain_counts <- dns_log %>%
  group_by(ip = tolower(id.orig_h), domain = tolower(`query `)) %>%
  summarise(request_count = n()) %>%
  filter(request_count > 5)
unique_ips_with_periodic_requests <- unique(ip_domain_counts$ip)

unique_ips_with_periodic_requests %>% length()
```
```{r}
head(unique_ips_with_periodic_requests, 10)
```

#### Обогащение данных
10\. Определите местоположение (страну, город) и организацию-провайдера для топ-10 доменов. Для этого можно использовать сторонние сервисы, например https://v4.ifconfig.co/.

1. teredo.ipv6.microsoft.com - США, Де-Мойн
2. tools.google.com - США, Маунтин-Вью
3. www.apple.com - США, Купертино
4. safebrowsing.clients.google.com - США, Маунтин-Вью
5. imap.gmail.com - США, Истон
6. stats.norton.com - Великобритания, Вашингтон
7. www.google.com - США, Моунтайн-Вью
8. ratings-wrs.symantec.com - США, Редмонд
9. api.twitter.com - США, Сан-Франциско
10. api.facebook.com - США, Менло-Парк

## Оценка результатов

Были получены ответы на все поставленные вопросы с помощью языка R 

## Вывод

В ходе лабораторной работы были импортированы, подготовлены, проанализированы и обогащены данные трафика DNS.


